syntax = "proto3";

package clean;

service Clean {
    // client initiated API
    rpc HostSession(HostInfo) returns (SessionData);
    rpc ListSessions(Empty) returns (Sessions);
    rpc JoinSession(JoinInfo) returns (Empty);

    // server initiated API
    rpc ServerEvents(EventRegister) returns (stream ServerRequest);
    rpc RespondToServerEvent(ClientEventResponse) returns (Empty);
}

message HostInfo {
    SessionType type = 1;
    uint32 player_count = 2;
}

enum SessionType {
    TYPE_UNSPECIFIED = 0;
    DICE = 1;
    COIN = 2;
}

message Sessions {
    repeated SessionData data = 1;
}

message SessionData {
    uint64 session_id = 1;
    SessionType type = 2;
    repeated string users = 3;
}

message JoinInfo {
    uint64 session_id = 1;
    uint64 user_id = 2;
    string user_name = 3;
}

message Empty {}

message EventRegister {
    uint64 session_id = 1;
    uint64 user_id = 2;
}

message ServerRequest {
    oneof msg {
        JoinInfo user_joined = 1;
        Ping ping = 2;
        RollDice dice = 3;
        FlipCoin coin = 4;
        Winner winner = 5;
        bool try_again = 6;
    }
}

message ClientResponse {
    oneof msg {
        Pong pong = 1;
        DiceGuess dice_guess = 2;
        CoinGuess coin_guess = 3;
        bool again = 4;
        string error = 5;
    }
}

message ClientEventResponse {
    EventRegister er = 1;
    ClientResponse client_response = 2;
}

message Ping {
    string text = 1;
}

message Pong {
    string text = 1;
}

message RollDice {
    uint32 sides = 1;
    uint32 count = 2;
}

message FlipCoin {
    uint32 count = 1;
}

message DiceGuess {
    repeated uint32 number = 1;
}

message CoinGuess {
    repeated Coin coins = 1;
}

enum Coin {
    COIN_UNSPECIFIED = 0;
    COIN_HEADS = 1;
    COIN_TAILS = 2;
}

message Winner {
    uint64 user_id = 1;
    string user_name = 2;
}
